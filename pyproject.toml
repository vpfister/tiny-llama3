[build-system]
requires = ["poetry_core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "tiny-llama3"
version = "0.0.1"
description = "tiny llama3-like built from scratch"
authors = ["Vincent Pfister <vincent@famille-pfister.net>"]
# Use identifier from https://spdx.org/licenses/
license = "MIT"
readme = "README.md"
homepage = "https://github.com/vpfister/tiny-llama3"
repository = "https://github.com/vpfister/tiny-llama3"
documentation = "README.md"
classifiers = [
    # https://pypi.org/classifiers/
    "Environment :: Console",
    "Development Status :: 1 - Planning",
]

[tool.poetry.urls]
# If you publish you package on PyPI, these will appear in the Project Links section.
"Bug Tracker" = "https://github.com/vpfister/tiny-llama3/issues"

[tool.poetry.scripts]
tiny-llama3 = "tiny_llama3.__main__:cli"

[tool.poetry.dependencies]
python = "^3.10.0"
click = "*"
jupyterlab = "*"
pandas = "*"
jupyterlab_git = "*"
jupyterlab_widgets = "*"

[tool.poetry.group.test.dependencies]
bandit = "*"
black = "*"
bump2version = "*"
flake8 = "*"
isort = "*"
jedi-language-server = "*"
mypy = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
reorder-python-imports = "*"
vulture = "*"
typeguard = "*"
pre-commit = "*"
pre-commit-hooks = "*"
pyupgrade = "*"
darglint = "*"
pyinstaller = "*"

[tool.poetry.group.docs.dependencies]
furo = "*"
myst_parser = "*"
sphinx = "*"
sphinx-autobuild = "*"
sphinx-click = "*"

[tool.isort]
profile = "black"

[tool.black]
target-version = ['py311']
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
select = ["ALL"]
lines-after-imports = 2
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.bandit]
[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
# Example
filterwarnings = [
    "ignore::DeprecationWarning:moto.*:",
    "ignore::DeprecationWarning:boto.*:",
]
